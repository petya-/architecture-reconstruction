<!doctype html>
<html lang="en">

<head>
  <title>Architecture Reconstruction Project</title>
  <script src="https://unpkg.com/gojs/release/go-debug.js"></script>
</head>

<body>
  <h1>Architecture Reconstruction Project</h1>
  <p>Reconstructing the <a href="https://github.com/zeeguu-ecosystem/Zeeguu-API">Zeeguu-API: Python backend</a></p>
  <p>
    <%= email %>
      <!-- <%= data %> -->
  </p>

  <div id="myDiagramDiv" style="width:100vw; height:80vh; background-color: #DAE4E4;"></div>
</body>

<script>
  var $ = go.GraphObject.make;
  var myDiagram =
    $(go.Diagram, "myDiagramDiv",
    );
  myDiagram.nodeTemplate =
    $(go.Node, "Auto",
      new go.Binding("location", "loc"),  // get the Node.location from the data.loc value
      $(go.Shape, "RoundedRectangle",
        { fill: "white" },
        new go.Binding("fill", "color")),
      $(go.TextBlock,
        { margin: 5 },
        new go.Binding("text", "key"))
    );

  myDiagram.linkTemplate =
    $(go.Link,
      $(go.Shape),                           // this is the link shape (the line)
      $(go.Shape, { toArrow: "Standard" }),  // this is an arrowhead
      $(go.TextBlock,                        // this is a Link label
        new go.Binding("text", "text")),
      $(go.TextBlock, "",
        {
          segmentIndex: 0, segmentOffset: new go.Point(NaN, NaN),
          segmentOrientation: go.Link.OrientUpright
        }),
      $(go.TextBlock, "import from",
        {
          segmentIndex: -1, segmentOffset: new go.Point(NaN, NaN),
          segmentOrientation: go.Link.OrientUpright
        })
    );


  let { modules, dependencies } = JSON.parse('<%-data%>');
  const coordinates = [
    { x: -100, y: 120 },
    { x: 171, y: -113 },
    { x: 700, y: 120 },
    { x: 300, y: 380 },
    { x: 300, y: 120 }
  ]

  const nodeDataArray = modules.map((module, index) => {
    let node = {
      key: module,
      color: 'lightblue',
      loc: new go.Point(coordinates[index].x, coordinates[index].y),
    }

    return node;
  })

  var linkDataArray = dependencies;
  myDiagram.model = new go.GraphLinksModel(nodeDataArray, linkDataArray);
</script>

</html>
